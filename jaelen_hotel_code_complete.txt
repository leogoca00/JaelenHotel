CÓDIGO DEL PROYECTO JAELEN HOTEL
================================================================================

ESTRUCTURA DE CARPETAS
================================================================================
src/
├── App.jsx
├── main.jsx
├── assets/
│   ├── images/
│   │   ├── hotel_entrance.jpg
│   │   ├── hotel_hall.jpg
│   │   ├── hotel_room.jpg
│   │   ├── hotel_restaurant.jpg
│   │   ├── hotel_pool.jpg
│   │   ├── socorro/
│   │   │   ├── room-main.jpg
│   │   │   ├── room-bedroom.jpg
│   │   │   ├── room-bathroom.jpg
│   │   │   ├── room-living.jpg
│   │   │   └── room-view.jpg
│   │   └── zaragocilla/
│   │       └── places-zaragocilla.jpg
│   └── videos/
│       └── hero.mp4
├── components/
│   ├── layout/
│   │   ├── Layout.jsx
│   │   └── Footer.jsx
│   └── ui/
│       ├── MainHero.jsx
│       ├── HeroSection.jsx
│       ├── Navbar.jsx
│       ├── SectionPreviews.jsx
│       ├── ImageGallery.jsx
│       └── ThemeToggle.jsx
├── hooks/
│   └── useTheme.js
├── pages/
│   ├── MainPage.jsx
│   ├── Places.jsx
│   ├── Gallery.jsx
│   ├── Services.jsx
│   ├── Contact.jsx
│   └── SocorroProject.jsx
└── styles/
    └── index.css

================================================================================


================================================================================
File: App.css
================================================================================

#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

================================================================================
File: App.jsx
================================================================================

import React, { useState, useEffect } from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import Layout from './components/layout/layout';
import MainPage from './pages/MainPage';
import Places from './pages/Places';
import Gallery from './pages/Gallery';
import Services from './pages/Services';
import Contact from './pages/Contact';
import SocorroProject from './pages/SocorroProject'; // Importamos el nuevo componente

const App = () => {
  // Initialize theme state from localStorage or system preference
  const [isDark, setIsDark] = useState(() => {
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme) {
      return savedTheme === 'dark';
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches;
  });
  
  const [language, setLanguage] = useState('en');

  // Effect to handle theme changes
  useEffect(() => {
    if (isDark) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
  }, [isDark]);

  const toggleDark = () => {
    setIsDark(prev => !prev);
  };

  return (
    <Router>
      <Layout 
        isDark={isDark} 
        toggleDark={toggleDark}
        setLanguage={setLanguage}
      >
        <Routes>
          <Route path="/" element={<MainPage isDark={isDark} toggleDark={toggleDark} setLanguage={setLanguage} />} />
          <Route path="/places" element={<Places isDark={isDark} toggleDark={toggleDark} setLanguage={setLanguage} />} />
          <Route path="/places/socorro" element={<SocorroProject isDark={isDark} toggleDark={toggleDark} setLanguage={setLanguage} />} />
          <Route path="/gallery" element={<Gallery isDark={isDark} toggleDark={toggleDark} setLanguage={setLanguage} />} />
          <Route path="/services" element={<Services isDark={isDark} toggleDark={toggleDark} setLanguage={setLanguage} />} />
          <Route path="/contact" element={<Contact isDark={isDark} toggleDark={toggleDark} setLanguage={setLanguage} />} />
        </Routes>
      </Layout>
    </Router>
  );
};

export default App;

================================================================================
File: index.css
================================================================================

:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

body {
  margin: 0;
  display: flex;
  place-items: center;
  min-width: 320px;
  min-height: 100vh;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}

================================================================================
File: main.jsx
================================================================================

import React from 'react'
import ReactDOM from 'react-dom/client'
import App from './App'
import './styles/index.css'

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
)

================================================================================
File: components\layout\Footer.jsx
================================================================================

import React from 'react';
import { Facebook, Twitter, Instagram, Linkedin } from 'lucide-react';

const Footer = () => {
  const socialLinks = [
    { icon: Facebook, href: '#' },
    { icon: Twitter, href: '#' },
    { icon: Instagram, href: '#' },
    { icon: Linkedin, href: '#' }
  ];

  const footerLinks = [
    {
      title: 'Company',
      links: [
        { name: 'About Us', href: '#' },
        { name: 'Careers', href: '#' },
        { name: 'Press', href: '#' },
        { name: 'Blog', href: '#' }
      ]
    },
    {
      title: 'Services',
      links: [
        { name: 'Rooms', href: '#' },
        { name: 'Dining', href: '#' },
        { name: 'Spa', href: '#' },
        { name: 'Events', href: '#' }
      ]
    },
    {
      title: 'Support',
      links: [
        { name: 'Contact', href: '#' },
        { name: 'FAQs', href: '#' },
        { name: 'Terms', href: '#' },
        { name: 'Privacy', href: '#' }
      ]
    }
  ];

  return (
    <footer className="bg-luxury-brown dark:bg-luxury-brown-dark">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-8">
          <div className="lg:col-span-2">
            <h2 className="text-2xl font-bold text-luxury-cream-light">Jaelen Hotel</h2>
            <p className="mt-4 text-luxury-cream-dark">
              Luxury and comfort in the heart of the city. Experience the perfect blend of elegance and modern amenities.
            </p>
            <div className="mt-6 flex space-x-4">
              {socialLinks.map((social, index) => (
                <a
                  key={index}
                  href={social.href}
                  className="text-luxury-cream-dark hover:text-luxury-gold-light transition-colors duration-300"
                >
                  <social.icon className="h-6 w-6" />
                </a>
              ))}
            </div>
          </div>

          {footerLinks.map((section) => (
            <div key={section.title}>
              <h3 className="text-sm font-medium uppercase tracking-wider text-luxury-gold-light">
                {section.title}
              </h3>
              <ul className="mt-4 space-y-2">
                {section.links.map((link) => (
                  <li key={link.name}>
                    <a
                      href={link.href}
                      className="text-luxury-cream-dark hover:text-luxury-gold-light transition-colors duration-300"
                    >
                      {link.name}
                    </a>
                  </li>
                ))}
              </ul>
            </div>
          ))}
        </div>

        <div className="mt-12 pt-8 border-t border-luxury-gold/10">
          <p className="text-center text-luxury-cream-dark">
            © {new Date().getFullYear()} Jaelen Hotel. All rights reserved.
          </p>
        </div>
      </div>
    </footer>
  );
};

export default Footer;

================================================================================
File: components\layout\layout.jsx
================================================================================

import React from 'react';
import Footer from './Footer';

const Layout = ({ children, isDark, toggleDark, setLanguage }) => {
  return (
    <div className={isDark ? 'dark' : ''}>
      <div className="min-h-screen bg-luxury-cream dark:bg-luxury-brown transition-colors duration-300">
        <main>
          {React.Children.map(children, child => {
            if (React.isValidElement(child)) {
              return React.cloneElement(child, { isDark, toggleDark, setLanguage });
            }
            return child;
          })}
        </main>
        <Footer isDark={isDark} />
      </div>
    </div>
  );
};

export default Layout;

================================================================================
File: components\ui\HeroSection.jsx
================================================================================

import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { Calendar, Globe, Sun, Moon } from 'lucide-react';
import { Link, useLocation, useNavigate } from 'react-router-dom';

const HeroSection = ({ 
  isDark, 
  toggleDark, 
  setLanguage,
  backgroundImage,
  pageTitle,
  pageDescription
}) => {
  const [langMenuOpen, setLangMenuOpen] = useState(false);
  const location = useLocation();
  const navigate = useNavigate();

  const languages = [
    { code: 'en', name: 'English' },
    { code: 'es', name: 'Español' },
    { code: 'fr', name: 'Français' },
    { code: 'de', name: 'Deutsch' }
  ];

  const menuItems = [
    { name: 'Home', href: '/' },
    { name: 'Our Places', href: '/places' },
    { name: 'Gallery', href: '/gallery' },
    { name: 'Additional Services', href: '/services' },
    { name: 'Contact Us', href: '/contact' }
  ];

  return (
    <div className="relative h-[70vh] w-full overflow-hidden">
      {/* Background Image */}
      <img
        src={backgroundImage}
        alt={pageTitle}
        className="absolute top-0 left-0 w-full h-full object-cover"
      />

      {/* Overlay */}
      <div className="absolute inset-0 bg-luxury-brown-dark/30"></div>

      {/* Navigation Menu */}
      <nav className="absolute top-8 left-0 w-full z-20">
        <div className="container mx-auto px-6">
          <div className="flex items-center justify-between space-x-8">
            {/* Logo */}
            <Link 
              to="/" 
              className="text-2xl font-bold text-luxury-cream-light hover:text-luxury-gold-light transition-colors"
            >
              Jaelen Hotel
            </Link>

            {/* Menu Items */}
            <div className="flex-1 flex justify-center space-x-8">
              {menuItems.map((item) => (
                <motion.button
                  key={item.name}
                  onClick={() => navigate(item.href)}
                  className={`
                    relative px-4 py-2 text-lg font-light
                    text-luxury-cream-light hover:text-luxury-gold-light
                    transition-colors duration-300
                    ${location.pathname === item.href ? 'text-luxury-gold-light' : ''}
                  `}
                  whileHover={{ scale: 1.05 }}
                  transition={{ type: "spring", stiffness: 400, damping: 10 }}
                >
                  {item.name}
                  <span className={`
                    absolute bottom-0 left-0 w-full h-0.5
                    transform scale-x-0 group-hover:scale-x-100
                    transition-transform duration-300
                    bg-luxury-gold-light
                  `} />
                </motion.button>
              ))}
            </div>

            {/* Controls Group */}
            <div className="flex items-center space-x-4">
              {/* Language Selector */}
              <div className="relative">
                <button
                  onClick={() => setLangMenuOpen(!langMenuOpen)}
                  className="
                    p-2 rounded-full
                    bg-luxury-cream-light/10 hover:bg-luxury-cream-light/20
                    text-luxury-cream-light hover:text-luxury-gold-light
                    transition-colors duration-300
                  "
                >
                  <Globe className="w-6 h-6" />
                </button>
                
                {langMenuOpen && (
                  <div className="absolute right-0 mt-2 w-48 rounded-lg shadow-lg 
                    bg-white dark:bg-luxury-brown 
                    ring-1 ring-luxury-gold/10 dark:ring-luxury-gold-dark/10">
                    <div className="py-1">
                      {languages.map((lang) => (
                        <button
                          key={lang.code}
                          onClick={() => {
                            setLanguage(lang.code);
                            setLangMenuOpen(false);
                          }}
                          className="block w-full text-left px-4 py-2 text-sm
                            text-luxury-brown dark:text-luxury-cream
                            hover:bg-luxury-cream dark:hover:bg-luxury-brown-light
                            transition-colors"
                        >
                          {lang.name}
                        </button>
                      ))}
                    </div>
                  </div>
                )}
              </div>

              {/* Theme Toggle */}
              <button
                onClick={toggleDark}
                className="
                  p-2 rounded-full
                  bg-luxury-cream-light/10 hover:bg-luxury-cream-light/20
                  text-luxury-cream-light hover:text-luxury-gold-light
                  transition-colors duration-300
                "
              >
                {isDark ? (
                  <Sun className="w-6 h-6" />
                ) : (
                  <Moon className="w-6 h-6" />
                )}
              </button>
            </div>
          </div>
        </div>
      </nav>

      {/* Page Content */}
      <div className="absolute inset-0 flex items-center justify-center text-center px-4">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 1 }}
          className="max-w-4xl"
        >
          <h1 className="text-5xl md:text-6xl font-bold mb-6 text-luxury-cream-light">
            {pageTitle}
          </h1>
          <p className="text-xl md:text-2xl text-luxury-cream">
            {pageDescription}
          </p>
        </motion.div>
      </div>

      {/* Booking Button */}
      <div className="absolute top-24 right-8 z-20">
        <div className="group relative">
          <button className="
            bg-luxury-cream-light/10 hover:bg-luxury-cream-light/20
            backdrop-blur-sm
            text-luxury-cream-light hover:text-luxury-gold-light
            p-6 rounded-full shadow-lg
            transition-all duration-300
            group-hover:scale-105
          ">
            <Calendar className="w-8 h-8" />
          </button>
          <div className="absolute right-0 mt-4 w-80 opacity-0 scale-95 transform 
            transition-all duration-300 invisible 
            group-hover:visible group-hover:opacity-100 group-hover:scale-100">
            <div className="bg-white dark:bg-luxury-brown rounded-lg shadow-xl p-6">
              <h3 className="text-xl text-luxury-brown dark:text-luxury-cream-light font-medium mb-4">
                Make a Reservation
              </h3>
              <div className="space-y-4">
                <div>
                  <label className="block text-sm font-medium text-luxury-brown dark:text-luxury-cream-light mb-1">
                    Check-in Date
                  </label>
                  <input
                    type="date"
                    className="w-full p-2 rounded-lg
                      border border-luxury-cream-dark dark:border-luxury-brown
                      bg-luxury-cream dark:bg-luxury-brown
                      text-luxury-brown dark:text-luxury-cream
                      focus:ring-2 focus:ring-luxury-gold-light focus:border-transparent"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-luxury-brown dark:text-luxury-cream-light mb-1">
                    Check-out Date
                  </label>
                  <input
                    type="date"
                    className="w-full p-2 rounded-lg
                      border border-luxury-cream-dark dark:border-luxury-brown
                      bg-luxury-cream dark:bg-luxury-brown
                      text-luxury-brown dark:text-luxury-cream
                      focus:ring-2 focus:ring-luxury-gold-light focus:border-transparent"
                  />
                </div>
                <button className="w-full py-3 px-4 rounded-lg
                  bg-luxury-gold hover:bg-luxury-gold-dark
                  text-white text-lg font-light
                  transition-colors">
                  Book Now
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default HeroSection;

================================================================================
File: components\ui\ImageGallery.jsx
================================================================================

import React, { useState, useEffect } from 'react';
import { ChevronRight, ChevronLeft } from 'lucide-react';

const ImageGallery = () => {
  const [currentSlide, setCurrentSlide] = useState(0);
  
  const slides = [
    {
      image: '/api/placeholder/1920/1080',
      title: 'Luxury Suite',
      description: 'Experience ultimate comfort in our premium suites'
    },
    {
      image: '/api/placeholder/1920/1080',
      title: 'Infinity Pool',
      description: 'Relax in our stunning infinity pool with ocean views'
    },
    {
      image: '/api/placeholder/1920/1080',
      title: 'Gourmet Restaurant',
      description: 'Savor exquisite cuisine in an elegant setting'
    },
    {
      image: '/api/placeholder/1920/1080',
      title: 'Spa Retreat',
      description: 'Unwind in our world-class spa facilities'
    },
    {
      image: '/api/placeholder/1920/1080',
      title: 'Event Space',
      description: 'Perfect venues for your special occasions'
    }
  ];

  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentSlide((prev) => (prev + 1) % slides.length);
    }, 5000);
    return () => clearInterval(timer);
  }, []);

  return (
    <div className="relative h-screen overflow-hidden">
      {slides.map((slide, index) => (
        <div
          key={index}
          className={`absolute inset-0 transition-opacity duration-1000 ${
            index === currentSlide ? 'opacity-100' : 'opacity-0'
          }`}
        >
          <img
            src={slide.image}
            alt={slide.title}
            className="object-cover w-full h-full"
          />
          <div className="absolute inset-0 bg-black/30">
            <div className="absolute bottom-20 left-20 text-white">
              <h2 className="text-4xl font-bold mb-2">{slide.title}</h2>
              <p className="text-xl">{slide.description}</p>
            </div>
          </div>
        </div>
      ))}
      
      <div className="absolute bottom-10 left-1/2 transform -translate-x-1/2 flex space-x-2">
        {slides.map((_, index) => (
          <button
            key={index}
            onClick={() => setCurrentSlide(index)}
            className={`w-3 h-3 rounded-full transition-colors duration-200 ${
              index === currentSlide ? 'bg-white' : 'bg-white/50'
            }`}
          />
        ))}
      </div>

      <button
        onClick={() => setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length)}
        className="absolute left-4 top-1/2 transform -translate-y-1/2 p-2 rounded-full bg-white/20 hover:bg-white/30 transition-colors"
      >
        <ChevronLeft className="w-6 h-6 text-white" />
      </button>

      <button
        onClick={() => setCurrentSlide((prev) => (prev + 1) % slides.length)}
        className="absolute right-4 top-1/2 transform -translate-y-1/2 p-2 rounded-full bg-white/20 hover:bg-white/30 transition-colors"
      >
        <ChevronRight className="w-6 h-6 text-white" />
      </button>
    </div>
  );
};

export default ImageGallery;

================================================================================
File: components\ui\MainHero.jsx
================================================================================

import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { Calendar, Sun, Moon, Globe } from 'lucide-react';
import { Link, useLocation, useNavigate } from 'react-router-dom';

const MainHero = ({ isDark, toggleDark, setLanguage, videoSrc }) => {
  const [langMenuOpen, setLangMenuOpen] = useState(false);
  const location = useLocation();
  const navigate = useNavigate();

  const languages = [
    { code: 'en', name: 'English' },
    { code: 'es', name: 'Español' },
    { code: 'fr', name: 'Français' },
    { code: 'de', name: 'Deutsch' }
  ];

  const menuItems = [
    { name: 'Home', href: '/' },
    { name: 'Our Places', href: '/places' },
    { name: 'Gallery', href: '/gallery' },
    { name: 'Additional Services', href: '/services' },
    { name: 'Contact Us', href: '/contact' }
  ];

  return (
    <div className="relative h-screen w-full overflow-hidden">
      {/* Video Background */}
      <video
        autoPlay
        muted
        loop
        playsInline
        className="absolute top-0 left-0 w-full h-full object-cover"
      >
        <source src={videoSrc} type="video/mp4" />
      </video>

      {/* Overlay with gradient */}
      <div className="absolute inset-0 bg-gradient-to-b from-luxury-brown-dark/50 via-luxury-brown-dark/30 to-luxury-brown-dark/50" />

      {/* Navigation Menu */}
      <nav className="absolute top-8 left-0 w-full z-20">
        <div className="container mx-auto px-6">
          <div className="flex items-center justify-between space-x-8">
            {/* Logo */}
            <Link 
              to="/" 
              className="text-2xl font-bold text-luxury-cream-light hover:text-luxury-gold-light transition-colors"
            >
              Jaelen Hotel
            </Link>

            {/* Menu Items */}
            <div className="flex-1 flex justify-center space-x-8">
              {menuItems.map((item) => (
                <motion.button
                  key={item.name}
                  onClick={() => navigate(item.href)}
                  className={`
                    relative px-4 py-2 text-lg font-light
                    text-luxury-cream-light hover:text-luxury-gold-light
                    transition-colors duration-300
                    ${location.pathname === item.href ? 'text-luxury-gold-light' : ''}
                  `}
                  whileHover={{ scale: 1.05 }}
                  transition={{ type: "spring", stiffness: 400, damping: 10 }}
                >
                  {item.name}
                  <span className={`
                    absolute bottom-0 left-0 w-full h-0.5
                    transform scale-x-0 group-hover:scale-x-100
                    transition-transform duration-300
                    bg-luxury-gold-light
                  `} />
                </motion.button>
              ))}
            </div>

            {/* Controls Group */}
            <div className="flex items-center space-x-4">
              {/* Language Selector */}
              <div className="relative">
                <button
                  onClick={() => setLangMenuOpen(!langMenuOpen)}
                  className="
                    p-2 rounded-full
                    bg-luxury-cream-light/10 hover:bg-luxury-cream-light/20
                    text-luxury-cream-light hover:text-luxury-gold-light
                    transition-colors duration-300
                  "
                >
                  <Globe className="w-6 h-6" />
                </button>
                
                {langMenuOpen && (
                  <div className="absolute right-0 mt-2 w-48 rounded-lg shadow-lg 
                    bg-white dark:bg-luxury-brown 
                    ring-1 ring-luxury-gold/10 dark:ring-luxury-gold-dark/10">
                    <div className="py-1">
                      {languages.map((lang) => (
                        <button
                          key={lang.code}
                          onClick={() => {
                            setLanguage(lang.code);
                            setLangMenuOpen(false);
                          }}
                          className="block w-full text-left px-4 py-2 text-sm
                            text-luxury-brown dark:text-luxury-cream
                            hover:bg-luxury-cream dark:hover:bg-luxury-brown-light
                            transition-colors"
                        >
                          {lang.name}
                        </button>
                      ))}
                    </div>
                  </div>
                )}
              </div>

              {/* Theme Toggle */}
              <button
                onClick={toggleDark}
                className={`
                  p-2 rounded-full
                  ${isDark 
                    ? 'bg-luxury-cream/10 hover:bg-luxury-cream/20' 
                    : 'bg-luxury-gold/10 hover:bg-luxury-gold/20'
                  }
                  ${isDark
                    ? 'text-luxury-cream hover:text-luxury-gold'
                    : 'text-luxury-brown hover:text-luxury-gold'
                  }
                  transition-all duration-300
                `}
              >
                {isDark ? (
                  <Sun className="w-6 h-6" />
                ) : (
                  <Moon className="w-6 h-6" />
                )}
              </button>
            </div>
          </div>
        </div>
      </nav>



      {/* Booking Button */}
      <div className="absolute top-24 right-8 z-20">
        <div className="group relative">
          <button className="
            bg-luxury-cream-light/10 hover:bg-luxury-cream-light/20
            backdrop-blur-sm
            text-luxury-cream-light hover:text-luxury-gold-light
            p-6 rounded-full shadow-lg
            transition-all duration-300
            group-hover:scale-105
          ">
            <Calendar className="w-8 h-8" />
          </button>
          <div className="absolute right-0 mt-4 w-80 opacity-0 scale-95 transform 
            transition-all duration-300 invisible 
            group-hover:visible group-hover:opacity-100 group-hover:scale-100">
            <div className="bg-white dark:bg-luxury-brown rounded-lg shadow-xl p-6">
              <h3 className="text-xl text-luxury-brown dark:text-luxury-cream-light font-medium mb-4">
                Make a Reservation
              </h3>
              <div className="space-y-4">
                <div>
                  <label className="block text-sm font-medium 
                    text-luxury-brown dark:text-luxury-cream-light mb-1">
                    Check-in Date
                  </label>
                  <input
                    type="date"
                    className="w-full p-2 rounded-lg
                      border border-luxury-cream-dark dark:border-luxury-brown
                      bg-luxury-cream dark:bg-luxury-brown
                      text-luxury-brown dark:text-luxury-cream
                      focus:ring-2 focus:ring-luxury-gold-light focus:border-transparent"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium 
                    text-luxury-brown dark:text-luxury-cream-light mb-1">
                    Check-out Date
                  </label>
                  <input
                    type="date"
                    className="w-full p-2 rounded-lg
                      border border-luxury-cream-dark dark:border-luxury-brown
                      bg-luxury-cream dark:bg-luxury-brown
                      text-luxury-brown dark:text-luxury-cream
                      focus:ring-2 focus:ring-luxury-gold-light focus:border-transparent"
                  />
                </div>
                <button className="w-full py-3 px-4 rounded-lg
                  bg-luxury-gold hover:bg-luxury-gold-dark
                  text-white text-lg font-light
                  transition-colors">
                  Book Now
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default MainHero;

================================================================================
File: components\ui\Navbar.jsx
================================================================================

import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { Calendar, Sun, Moon, Globe } from 'lucide-react';
import { Link, useLocation, useNavigate } from 'react-router-dom';

const Navbar = ({ isDark, toggleDark, setLanguage }) => {
  const [langMenuOpen, setLangMenuOpen] = useState(false);
  const location = useLocation();
  const navigate = useNavigate();

  const languages = [
    { code: 'en', name: 'English' },
    { code: 'es', name: 'Español' },
    { code: 'fr', name: 'Français' },
    { code: 'de', name: 'Deutsch' }
  ];

  const menuItems = [
    { name: 'Home', href: '/' },
    { name: 'Our Places', href: '/places' },
    { name: 'Gallery', href: '/gallery' },
    { name: 'Additional Services', href: '/services' },
    { name: 'Contact Us', href: '/contact' }
  ];

  return (
    <>
      {/* Navbar */}
      <nav className="fixed top-0 left-0 w-full z-50 bg-black/20 backdrop-blur-sm">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            {/* Logo */}
            <Link to="/" className="text-2xl font-bold text-white hover:text-blue-400 transition-colors">
              Jaelen Hotel
            </Link>

            {/* Navigation Menu */}
            <div className="flex-1 flex justify-center space-x-8">
              {menuItems.map((item) => (
                <motion.button
                  key={item.name}
                  onClick={() => navigate(item.href)}
                  className={`text-white text-lg font-medium hover:text-blue-400 transition-colors relative group ${
                    location.pathname === item.href ? 'text-blue-400' : ''
                  }`}
                  whileHover={{ scale: 1.05 }}
                  transition={{ type: "spring", stiffness: 400, damping: 10 }}
                >
                  {item.name}
                  <span className="absolute bottom-0 left-0 w-full h-0.5 bg-blue-400 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-200"></span>
                </motion.button>
              ))}
            </div>

            {/* Controls Group */}
            <div className="flex items-center space-x-4">
              {/* Language Selector */}
              <div className="relative">
                <button
                  onClick={() => setLangMenuOpen(!langMenuOpen)}
                  className="p-2 rounded-full hover:bg-white/10 text-white transition-colors"
                >
                  <Globe className="w-6 h-6" />
                </button>
                
                {langMenuOpen && (
                  <div className="absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white dark:bg-gray-800 ring-1 ring-black ring-opacity-5">
                    <div className="py-1">
                      {languages.map((lang) => (
                        <button
                          key={lang.code}
                          onClick={() => {
                            setLanguage(lang.code);
                            setLangMenuOpen(false);
                          }}
                          className="block w-full text-left px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700"
                        >
                          {lang.name}
                        </button>
                      ))}
                    </div>
                  </div>
                )}
              </div>

              {/* Theme Toggle */}
              <button
                onClick={toggleDark}
                className="p-2 rounded-full hover:bg-white/10 text-white transition-colors"
              >
                {isDark ? (
                  <Sun className="w-6 h-6" />
                ) : (
                  <Moon className="w-6 h-6" />
                )}
              </button>
            </div>
          </div>
        </div>
      </nav>

      {/* Booking Button */}
      <div className="fixed top-24 right-8 z-50">
        <div className="group relative">
          <button className="bg-blue-600 hover:bg-blue-700 text-white p-6 rounded-full shadow-lg transition-all duration-300 group-hover:scale-105">
            <Calendar className="w-8 h-8" />
          </button>
          <div className="absolute right-0 mt-4 w-80 opacity-0 scale-95 transform transition-all duration-300 invisible group-hover:visible group-hover:opacity-100 group-hover:scale-100">
            <div className="bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6">
              <h3 className="text-xl text-gray-800 dark:text-white font-medium mb-4">Make a Reservation</h3>
              <div className="space-y-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    Check-in Date
                  </label>
                  <input
                    type="date"
                    className="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    Check-out Date
                  </label>
                  <input
                    type="date"
                    className="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-white"
                  />
                </div>
                <button className="w-full bg-blue-600 hover:bg-blue-700 text-white py-3 px-4 rounded-lg text-lg font-medium transition-colors">
                  Book Now
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
};

export default Navbar;

================================================================================
File: components\ui\SectionPreview.jsx
================================================================================

import React from 'react';
import { motion } from 'framer-motion';
import { useNavigate } from 'react-router-dom';

const SectionPreview = ({ section, index }) => {
  const navigate = useNavigate();
  const isEven = index % 2 === 0;

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      whileInView={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.6, delay: index * 0.1 }}
      className="flex flex-col md:flex-row items-center gap-8 py-16 px-6 md:px-12 border-b border-luxury-gold/10 dark:border-luxury-gold-dark/10 last:border-0"
    >
      <div className={`w-full md:w-1/2 ${isEven ? 'md:order-1' : 'md:order-2'}`}>
        <motion.div
          className="relative overflow-hidden rounded-lg shadow-lg group"
          whileHover={{ scale: 1.02 }}
          transition={{ duration: 0.3 }}
        >
          <img
            src={section.image}
            alt={section.title}
            className="w-full h-[400px] object-cover transform transition-transform duration-500 group-hover:scale-110"
          />
          <div className="absolute inset-0 bg-gradient-to-t from-luxury-brown-dark/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
        </motion.div>
      </div>
      
      <div className={`w-full md:w-1/2 ${isEven ? 'md:order-2 md:pl-8' : 'md:order-1 md:pr-8'}`}>
        <h3 className="text-3xl font-light mb-4 text-luxury-brown dark:text-luxury-cream">
          {section.title}
        </h3>
        <p className="text-lg mb-6 text-luxury-brown-light dark:text-luxury-cream-dark leading-relaxed">
          {section.description}
        </p>
        <motion.button
          onClick={() => navigate(section.href)}
          className="group relative px-8 py-3 overflow-hidden rounded-lg
            bg-luxury-gold/10 dark:bg-luxury-gold-dark/10
            text-luxury-brown dark:text-luxury-gold-light
            hover:bg-luxury-gold/20 dark:hover:bg-luxury-gold-dark/20
            transition-all duration-300"
          whileHover={{ scale: 1.05 }}
          whileTap={{ scale: 0.95 }}
        >
          <span className="relative z-10 font-light">Discover More</span>
          <div className="absolute inset-0 -translate-x-full group-hover:translate-x-0
            bg-luxury-gold/10 dark:bg-luxury-gold-dark/10
            transition-transform duration-300" />
        </motion.button>
      </div>
    </motion.div>
  );
};

export default SectionPreview;

================================================================================
File: components\ui\ThemeToggle.jsx
================================================================================

import React from 'react';
import { Sun, Moon } from 'lucide-react';

const ThemeToggle = ({ isDark, toggleDark }) => {
  return (
    <button
      onClick={toggleDark}
      className={`
        p-2 rounded-full
        ${isDark 
          ? 'bg-luxury-cream/10 hover:bg-luxury-cream/20' 
          : 'bg-luxury-gold/10 hover:bg-luxury-gold/20'
        }
        ${isDark
          ? 'text-luxury-cream hover:text-luxury-gold-light'
          : 'text-luxury-brown hover:text-luxury-gold'
        }
        transition-all duration-300
      `}
      aria-label={isDark ? 'Switch to light mode' : 'Switch to dark mode'}
    >
      {isDark ? (
        <Sun className="w-6 h-6" />
      ) : (
        <Moon className="w-6 h-6" />
      )}
    </button>
  );
};

export default ThemeToggle;

================================================================================
File: hooks\useTheme.js
================================================================================



================================================================================
File: pages\Contact.jsx
================================================================================

import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { Mail, Phone, MapPin } from 'lucide-react';
import HeroSection from '../components/ui/HeroSection';

const Contact = ({ isDark, toggleDark, setLanguage }) => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    subject: '',
    message: ''
  });

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log(formData);
  };

  const contactInfo = [
    {
      icon: Phone,
      title: 'Phone',
      details: '+1 (555) 123-4567',
      link: 'tel:+15551234567'
    },
    {
      icon: Mail,
      title: 'Email',
      details: 'info@jaelenhotel.com',
      link: 'mailto:info@jaelenhotel.com'
    },
    {
      icon: MapPin,
      title: 'Location',
      details: '123 Luxury Avenue, City, Country',
      link: 'https://maps.google.com'
    }
  ];

  return (
    <div className="min-h-screen bg-luxury-cream dark:bg-luxury-brown transition-colors duration-300">
      <HeroSection 
        isDark={isDark} 
        toggleDark={toggleDark}
        setLanguage={setLanguage}
        backgroundImage="/api/placeholder/1920/1080"
        pageTitle="Contact Us"
        pageDescription="Let us assist you in creating unforgettable moments"
      />

      <section className="py-20">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-12">
            <motion.div
              initial={{ opacity: 0, x: -20 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.6 }}
              className="lg:col-span-2"
            >
              <form onSubmit={handleSubmit} className="space-y-6 bg-white dark:bg-luxury-brown-light 
                p-8 rounded-lg shadow-lg">
                <div className="grid grid-cols-1 sm:grid-cols-2 gap-6">
                  <div>
                    <label className="block text-sm font-medium text-luxury-brown dark:text-luxury-cream-light mb-1">
                      Name
                    </label>
                    <input
                      type="text"
                      value={formData.name}
                      onChange={(e) => setFormData({ ...formData, name: e.target.value })}
                      className="w-full p-3 rounded-lg border border-luxury-cream-dark dark:border-luxury-brown
                        bg-luxury-cream dark:bg-luxury-brown
                        text-luxury-brown dark:text-luxury-cream
                        focus:ring-2 focus:ring-luxury-gold-light focus:border-transparent
                        transition-colors"
                      required
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-luxury-brown dark:text-luxury-cream-light mb-1">
                      Email
                    </label>
                    <input
                      type="email"
                      value={formData.email}
                      onChange={(e) => setFormData({ ...formData, email: e.target.value })}
                      className="w-full p-3 rounded-lg border border-luxury-cream-dark dark:border-luxury-brown
                        bg-luxury-cream dark:bg-luxury-brown
                        text-luxury-brown dark:text-luxury-cream
                        focus:ring-2 focus:ring-luxury-gold-light focus:border-transparent
                        transition-colors"
                      required
                    />
                  </div>
                </div>
                <div>
                  <label className="block text-sm font-medium text-luxury-brown dark:text-luxury-cream-light mb-1">
                    Subject
                  </label>
                  <input
                    type="text"
                    value={formData.subject}
                    onChange={(e) => setFormData({ ...formData, subject: e.target.value })}
                    className="w-full p-3 rounded-lg border border-luxury-cream-dark dark:border-luxury-brown
                      bg-luxury-cream dark:bg-luxury-brown
                      text-luxury-brown dark:text-luxury-cream
                      focus:ring-2 focus:ring-luxury-gold-light focus:border-transparent
                      transition-colors"
                    required
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-luxury-brown dark:text-luxury-cream-light mb-1">
                    Message
                  </label>
                  <textarea
                    rows={4}
                    value={formData.message}
                    onChange={(e) => setFormData({ ...formData, message: e.target.value })}
                    className="w-full p-3 rounded-lg border border-luxury-cream-dark dark:border-luxury-brown
                      bg-luxury-cream dark:bg-luxury-brown
                      text-luxury-brown dark:text-luxury-cream
                      focus:ring-2 focus:ring-luxury-gold-light focus:border-transparent
                      transition-colors resize-none"
                    required
                  />
                </div>
                <button
                  type="submit"
                  className="w-full py-3 px-6 rounded-lg
                    bg-luxury-gold hover:bg-luxury-gold-dark
                    text-white font-medium
                    transition-colors duration-300
                    focus:outline-none focus:ring-2 focus:ring-luxury-gold-light focus:ring-offset-2"
                >
                  Send Message
                </button>
              </form>
            </motion.div>

            <motion.div
              initial={{ opacity: 0, x: 20 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.6 }}
              className="space-y-8"
            >
              {contactInfo.map((item, index) => (
                <div key={index} className="flex items-start space-x-4 p-6 bg-white dark:bg-luxury-brown-light 
                  rounded-lg shadow-lg transition-transform hover:scale-105 duration-300">
                  <div className="flex-shrink-0">
                    <div className="w-12 h-12 flex items-center justify-center rounded-full 
                      bg-luxury-gold/10 dark:bg-luxury-gold-dark/10">
                      <item.icon className="w-6 h-6 text-luxury-gold dark:text-luxury-gold-light" />
                    </div>
                  </div>
                  <div>
                    <h3 className="text-lg font-medium text-luxury-brown dark:text-luxury-cream-light">
                      {item.title}
                    </h3>
                    <a
                      href={item.link}
                      className="mt-1 text-luxury-brown-light dark:text-luxury-cream-dark
                        hover:text-luxury-gold dark:hover:text-luxury-gold-light
                        transition-colors"
                    >
                      {item.details}
                    </a>
                  </div>
                </div>
              ))}
            </motion.div>
          </div>
        </div>
      </section>
    </div>
  );
};

export default Contact;

================================================================================
File: pages\Gallery.jsx
================================================================================

import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { X } from 'lucide-react';
import HeroSection from '../components/ui/HeroSection';

const Gallery = ({ isDark, toggleDark, setLanguage }) => {
  const [selectedImage, setSelectedImage] = useState(null);

  const images = [
    { id: 1, src: '/api/placeholder/800/600', category: 'Rooms', title: 'Luxury Suite' },
    { id: 2, src: '/api/placeholder/800/600', category: 'Dining', title: 'Gourmet Restaurant' },
    { id: 3, src: '/api/placeholder/800/600', category: 'Facilities', title: 'Infinity Pool' },
    { id: 4, src: '/api/placeholder/800/600', category: 'Rooms', title: 'Executive Room' },
    { id: 5, src: '/api/placeholder/800/600', category: 'Dining', title: 'Elegant Bar' },
    { id: 6, src: '/api/placeholder/800/600', category: 'Facilities', title: 'Spa Retreat' },
    { id: 7, src: '/api/placeholder/800/600', category: 'Rooms', title: 'Presidential Suite' },
    { id: 8, src: '/api/placeholder/800/600', category: 'Facilities', title: 'Fitness Center' }
  ];

  const [filter, setFilter] = useState('All');
  const categories = ['All', ...new Set(images.map(img => img.category))];

  const filteredImages = filter === 'All' 
    ? images 
    : images.filter(img => img.category === filter);

  return (
    <div className="min-h-screen bg-luxury-cream dark:bg-luxury-brown transition-colors duration-300">
      <HeroSection 
        isDark={isDark} 
        toggleDark={toggleDark}
        setLanguage={setLanguage}
        backgroundImage="/api/placeholder/1920/1080"
        pageTitle="Our Gallery"
        pageDescription="A visual journey through elegance and sophistication"
      />

      <section className="py-20">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="mt-8 flex justify-center space-x-4 flex-wrap gap-y-4">
            {categories.map((category) => (
              <button
                key={category}
                onClick={() => setFilter(category)}
                className={`px-6 py-2 rounded-full transition-all duration-300 ${
                  filter === category
                    ? 'bg-luxury-gold text-white'
                    : 'bg-luxury-cream-dark dark:bg-luxury-brown-light text-luxury-brown dark:text-luxury-cream hover:bg-luxury-gold/20'
                }`}
              >
                {category}
              </button>
            ))}
          </div>

          <div className="mt-12 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
            {filteredImages.map((image, index) => (
              <motion.div
                key={image.id}
                initial={{ opacity: 0, scale: 0.9 }}
                whileInView={{ opacity: 1, scale: 1 }}
                transition={{ duration: 0.4, delay: index * 0.1 }}
                className="relative group cursor-pointer"
                onClick={() => setSelectedImage(image)}
              >
                <div className="aspect-w-4 aspect-h-3 overflow-hidden rounded-lg">
                  <img
                    src={image.src}
                    alt={image.title}
                    className="object-cover w-full h-full transform transition-transform duration-500 group-hover:scale-110"
                  />
                  <div className="absolute inset-0 bg-gradient-to-t from-luxury-brown-dark/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
                  <div className="absolute inset-0 flex items-end justify-start p-6 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                    <div>
                      <p className="text-luxury-cream-light text-lg font-medium">
                        {image.title}
                      </p>
                      <p className="text-luxury-cream-dark text-sm">
                        {image.category}
                      </p>
                    </div>
                  </div>
                </div>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* Modal para imagen ampliada */}
      {selectedImage && (
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          exit={{ opacity: 0 }}
          className="fixed inset-0 z-50 flex items-center justify-center bg-luxury-brown-dark/90"
        >
          <div className="relative max-w-4xl mx-auto px-4">
            <button
              onClick={() => setSelectedImage(null)}
              className="absolute top-4 right-4 text-luxury-cream-light hover:text-luxury-gold-light transition-colors"
            >
              <X className="w-6 h-6" />
            </button>
            <motion.img
              initial={{ scale: 0.9 }}
              animate={{ scale: 1 }}
              src={selectedImage.src}
              alt={selectedImage.title}
              className="max-h-[80vh] w-auto rounded-lg shadow-2xl"
            />
            <div className="text-center mt-4">
              <h3 className="text-luxury-cream-light text-xl font-medium">
                {selectedImage.title}
              </h3>
              <p className="text-luxury-cream-dark">
                {selectedImage.category}
              </p>
            </div>
          </div>
        </motion.div>
      )}
    </div>
  );
};

export default Gallery;

================================================================================
File: pages\MainPage.jsx
================================================================================

import React from 'react';
import heroVideo from '../assets/videos/hero.mp4';
import MainHero from '../components/ui/MainHero';
import SectionPreview from '../components/ui/SectionPreview';

const MainPage = ({ isDark, toggleDark, setLanguage }) => {
  const sections = [
    {
      title: "Luxurious Accommodations",
      description: "Discover our collection of meticulously designed rooms and suites, where every detail has been carefully curated to provide an unparalleled experience of comfort and elegance. Each space is a perfect blend of modern luxury and timeless sophistication.",
      image: "/api/placeholder/800/600",
      href: "/places"
    },
    {
      title: "Premium Services",
      description: "Indulge in our world-class amenities, from rejuvenating spa treatments to exquisite dining experiences. Our dedicated staff ensures every moment of your stay exceeds expectations, offering personalized service that anticipates your every need.",
      image: "/api/placeholder/800/600",
      href: "/services"
    },
    {
      title: "Captivating Moments",
      description: "Step into a world of visual elegance through our carefully curated gallery. Experience the beauty of our spaces, the warmth of our hospitality, and the attention to detail that makes every stay memorable. Let our images inspire your next luxury getaway.",
      image: "/api/placeholder/800/600",
      href: "/gallery"
    },
    {
      title: "Personalized Attention",
      description: "Our concierge team is available 24/7 to ensure your stay is nothing short of exceptional. From arranging private transportation to securing exclusive reservations, we're here to transform your wishes into unforgettable experiences.",
      image: "/api/placeholder/800/600",
      href: "/contact"
    }
  ];

  return (
    <div className="w-full bg-luxury-cream dark:bg-luxury-brown transition-colors duration-300">
      <MainHero 
        isDark={isDark} 
        toggleDark={toggleDark}
        setLanguage={setLanguage}
        videoSrc={heroVideo}
      />
      <div className="max-w-7xl mx-auto">
        {sections.map((section, index) => (
          <SectionPreview 
            key={section.title}
            section={section}
            index={index}
          />
        ))}
      </div>
    </div>
  );
};

export default MainPage;

================================================================================
File: pages\Places.jsx
================================================================================

import React from 'react';
import { motion } from 'framer-motion';
import { Lock } from 'lucide-react';
import { useNavigate } from 'react-router-dom';
import HeroSection from '../components/ui/HeroSection';
import placesHeroImg from '../assets/images/places-hero.jpg';
// Importamos las imágenes locales
import socorroImg from '../assets/images/socorro/places-socorro.jpg';
import zaragocillaImg from '../assets/images/zaragocilla/places-zaragocilla.jpg';

const Places = ({ isDark, toggleDark, setLanguage }) => {
  const navigate = useNavigate();
  
  const locations = [
    {
      title: 'Proyecto El Socorro',
      description: 'Experimenta el lujo y la comodidad en nuestra exclusiva ubicación en El Socorro. Disfruta de vistas espectaculares y amenidades premium diseñadas para una estancia inolvidable.',
      image: socorroImg,
      href: '/places/socorro',
      status: 'active'
    },
    {
      title: 'Proyecto Zaragocilla',
      description: 'Próximamente, una nueva definición de hospitalidad de lujo en Zaragocilla. Regístrate para ser el primero en conocer nuestras ofertas exclusivas de prelanzamiento.',
      image: zaragocillaImg,
      href: '#',
      status: 'coming-soon'
    }
  ];

  return (
    <div className="min-h-screen bg-luxury-cream dark:bg-luxury-brown transition-colors duration-300">
      <HeroSection 
        isDark={isDark} 
        toggleDark={toggleDark}
        setLanguage={setLanguage}
        backgroundImage={placesHeroImg}
        pageTitle="Nuestras Ubicaciones"
        pageDescription="Descubre nuestras exclusivas propiedades diseñadas para experiencias excepcionales"
      />
      
      <div className="container mx-auto px-6 py-20">
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
          {locations.map((location, index) => (
            <motion.div
              key={location.title}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: index * 0.2 }}
              onClick={() => location.status === 'active' && navigate(location.href)}
              className={`
                group relative rounded-xl overflow-hidden shadow-lg 
                transform transition-all duration-500 
                ${location.status === 'active' ? 'cursor-pointer hover:-translate-y-2' : 'cursor-default'}
                hover:shadow-2xl
              `}
            >
              {/* Imagen Principal */}
              <div className="relative h-[400px] w-full overflow-hidden">
                <img
                  src={location.image}
                  alt={location.title}
                  className="h-full w-full object-cover object-center 
                    transition-transform duration-700 group-hover:scale-110"
                />
                {/* Overlay con gradiente */}
                <div className="absolute inset-0 bg-gradient-to-t 
                  from-luxury-brown-dark/80 via-luxury-brown-dark/20 to-transparent" 
                />
                
                {/* Contenido sobre la imagen */}
                <div className="absolute inset-0 flex flex-col justify-end p-8">
                  <div className="transform transition-transform duration-500 group-hover:translate-y-0">
                    <div className="flex items-center space-x-3">
                      <h3 className="text-3xl font-light text-luxury-cream-light">
                        {location.title}
                      </h3>
                      {location.status === 'coming-soon' && (
                        <Lock className="w-6 h-6 text-luxury-gold-light" />
                      )}
                    </div>
                    <p className="mt-3 text-luxury-cream max-w-lg">
                      {location.description}
                    </p>
                    
                    {/* Botón personalizado */}
                    <div className="mt-6">
                      <button
                        className={`
                          px-6 py-3 rounded-lg
                          backdrop-blur-sm
                          border border-luxury-cream/20
                          ${location.status === 'active'
                            ? 'bg-luxury-cream/10 hover:bg-luxury-cream/20 text-luxury-cream hover:text-luxury-gold-light'
                            : 'bg-luxury-gold/10 text-luxury-gold-light cursor-not-allowed'}
                          transition-all duration-300
                          group-hover:border-luxury-gold-light
                        `}
                      >
                        {location.status === 'active' ? 'Explorar Propiedad' : 'Próximamente'}
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </motion.div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default Places;

================================================================================
File: pages\Services.jsx
================================================================================

import React from 'react';
import { motion } from 'framer-motion';
import { 
  Heart,
  ChefHat,
  Users,
  Dumbbell,
  Wifi,
  Car,
  Coffee,
  ShieldCheck
} from 'lucide-react';
import HeroSection from '../components/ui/HeroSection';

const Services = ({ isDark, toggleDark, setLanguage }) => {
  const services = [
    {
      title: 'Spa & Wellness',
      description: 'Immerse yourself in tranquility with our premium spa services. Expert therapists provide personalized treatments using luxury products.',
      icon: Heart
    },
    {
      title: 'Fine Dining',
      description: 'Savor exceptional cuisine prepared by world-class chefs in our elegant restaurants, featuring both local and international specialties.',
      icon: ChefHat
    },
    {
      title: 'Event Spaces',
      description: 'Host memorable occasions in our sophisticated venues, perfect for both intimate gatherings and grand celebrations.',
      icon: Users
    },
    {
      title: 'Fitness Center',
      description: 'Maintain your wellness routine in our state-of-the-art fitness center, equipped with premium exercise machines and personal trainers.',
      icon: Dumbbell
    },
    {
      title: 'High-Speed WiFi',
      description: 'Stay connected with complimentary high-speed internet access throughout the hotel, perfect for both business and leisure.',
      icon: Wifi
    },
    {
      title: 'Valet Parking',
      description: 'Experience hassle-free arrival and departure with our professional valet service and secure parking facilities.',
      icon: Car
    },
    {
      title: 'Room Service',
      description: 'Enjoy gourmet dining in the privacy of your room with our 24-hour room service, featuring an extensive menu of culinary delights.',
      icon: Coffee
    },
    {
      title: '24/7 Security',
      description: 'Rest assured with our round-the-clock security service, ensuring your safety and peace of mind throughout your stay.',
      icon: ShieldCheck
    }
  ];

  return (
    <div className="min-h-screen bg-luxury-cream dark:bg-luxury-brown transition-colors duration-300">
      <HeroSection 
        isDark={isDark} 
        toggleDark={toggleDark}
        setLanguage={setLanguage}
        backgroundImage="/api/placeholder/1920/1080"
        pageTitle="Premium Services"
        pageDescription="Experience unparalleled luxury and comfort"
      />

      <section className="py-20">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid grid-cols-1 gap-8 sm:grid-cols-2 lg:grid-cols-4">
            {services.map((service, index) => (
              <motion.div
                key={service.title}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: index * 0.1 }}
                className="group relative p-8 bg-white dark:bg-luxury-brown-light rounded-lg shadow-lg 
                  hover:shadow-xl transition-all duration-300 overflow-hidden"
              >
                <div className="absolute inset-0 bg-luxury-gold-light/5 dark:bg-luxury-gold-dark/5 
                  scale-0 group-hover:scale-100 transition-transform duration-300" />
                
                <div className="relative z-10">
                  <div className="flex items-center justify-center w-12 h-12 mb-6 rounded-full 
                    bg-luxury-gold/10 dark:bg-luxury-gold-dark/10">
                    <service.icon className="w-6 h-6 text-luxury-gold dark:text-luxury-gold-light" />
                  </div>
                  
                  <h3 className="text-xl font-medium mb-3 text-luxury-brown dark:text-luxury-cream-light
                    group-hover:text-luxury-gold dark:group-hover:text-luxury-gold-light transition-colors">
                    {service.title}
                  </h3>
                  
                  <p className="text-luxury-brown-light dark:text-luxury-cream-dark leading-relaxed">
                    {service.description}
                  </p>
                </div>

                <div className="absolute bottom-0 left-0 w-full h-1 bg-gradient-to-r 
                  from-luxury-gold/0 via-luxury-gold to-luxury-gold/0 
                  dark:from-luxury-gold-dark/0 dark:via-luxury-gold-dark dark:to-luxury-gold-dark/0
                  opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
              </motion.div>
            ))}
          </div>
        </div>
      </section>
    </div>
  );
};

export default Services;

================================================================================
File: pages\SocorroProject.jsx
================================================================================

import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Calendar, Check, ChevronLeft, ChevronRight, X } from 'lucide-react';
import HeroSection from '../components/ui/HeroSection';

// Importar las imágenes
import roomMain from '../assets/images/socorro/room-main.jpg';
import roomBedroom from '../assets/images/socorro/room-bedroom.jpg';
import roomBathroom from '../assets/images/socorro/room-bathroom.jpg';
import roomLiving from '../assets/images/socorro/room-living.jpg';
import roomView from '../assets/images/socorro/room-view.jpg';
import placesHeroImg from '../assets/images/places-hero.jpg';

const SocorroProject = ({ isDark, toggleDark, setLanguage }) => {
  const [currentImage, setCurrentImage] = useState(0);
  const [showGallery, setShowGallery] = useState(false);

  // Array de imágenes con metadata
  const images = [
    {
      src: roomMain,
      alt: 'Vista principal de la habitación',
      title: 'Suite Ejecutiva'
    },
    {
      src: roomBedroom,
      alt: 'Área de dormitorio',
      title: 'Dormitorio Principal'
    },
    {
      src: roomBathroom,
      alt: 'Baño de lujo',
      title: 'Baño Completo'
    },
    {
      src: roomLiving,
      alt: 'Área de estar',
      title: 'Sala de Estar'
    },
    {
      src: roomView,
      alt: 'Vista desde la habitación',
      title: 'Vista Panorámica'
    }
  ];

  const amenities = [
    'Cama King Size',
    'Baño privado con ducha de lluvia',
    'Smart TV 55"',
    'Aire acondicionado',
    'WiFi de alta velocidad',
    'Minibar premium',
    'Caja fuerte digital',
    'Servicio a la habitación 24/7'
  ];

  return (
    <div className="min-h-screen bg-luxury-cream dark:bg-luxury-brown transition-colors duration-300">
      <HeroSection 
        isDark={isDark} 
        toggleDark={toggleDark}
        setLanguage={setLanguage}
        backgroundImage={placesHeroImg}
        pageTitle="Proyecto El Socorro"
        pageDescription="Una experiencia de hospedaje única en el corazón de la ciudad"
      />

      {/* Sección Principal */}
      <div className="container mx-auto px-6 py-16">
{/* Galería de Vista Previa */}
<div className="relative group">
  <div className="grid grid-cols-4 gap-4 h-[500px]">
    {/* Imagen Principal */}
    <div 
      className="col-span-2 row-span-2 relative overflow-hidden rounded-lg group/item cursor-pointer"
      onClick={() => setShowGallery(true)}
    >
      <motion.div
        whileHover={{ scale: 1.02 }}
        className="h-full"
      >
        <img
          src={images[0].src}
          alt={images[0].alt}
          className="w-full h-full object-cover transition-transform duration-700 group-hover/item:scale-105"
        />
        <div className="absolute inset-0 bg-gradient-to-t from-luxury-brown-dark/80 to-transparent opacity-0 group-hover/item:opacity-100 transition-all duration-500">
          <div className="absolute bottom-0 left-0 right-0 p-6 transform translate-y-4 group-hover/item:translate-y-0 transition-transform duration-500">
            <h3 className="text-2xl font-light text-luxury-cream-light mb-2">
              {images[0].title}
            </h3>
            <p className="text-luxury-cream text-sm">
              Click para ver la galería completa
            </p>
          </div>
        </div>
      </motion.div>
    </div>

    {/* Imágenes Secundarias */}
    {images.slice(1, 5).map((img, index) => (
      <div
        key={index}
        className="relative overflow-hidden rounded-lg group/item cursor-pointer"
        onClick={() => {
          setCurrentImage(index + 1);
          setShowGallery(true);
        }}
      >
        <motion.div
          whileHover={{ scale: 1.02 }}
          className="h-full"
        >
          <img
            src={img.src}
            alt={img.alt}
            className="w-full h-full object-cover transition-transform duration-700 group-hover/item:scale-105"
          />
          <div className="absolute inset-0 bg-gradient-to-t from-luxury-brown-dark/80 to-transparent opacity-0 group-hover/item:opacity-100 transition-all duration-500">
            <div className="absolute bottom-0 left-0 right-0 p-4 transform translate-y-4 group-hover/item:translate-y-0 transition-transform duration-500">
              <h4 className="text-luxury-cream-light text-lg font-light">{img.title}</h4>
            </div>
          </div>
        </motion.div>
      </div>
    ))}
  </div>

  {/* Botón Ver Todas */}
  <motion.button 
    className="absolute bottom-4 right-4 px-6 py-3 rounded-lg
      bg-luxury-cream/10 backdrop-blur-sm
      border border-luxury-cream/20
      text-luxury-cream
      transition-all duration-300
      hover:bg-luxury-cream/20 hover:border-luxury-gold-light
      hover:text-luxury-gold-light"
    whileHover={{ scale: 1.05 }}
    whileTap={{ scale: 0.95 }}
    onClick={() => setShowGallery(true)}
  >
    <span className="relative inline-flex items-center">
      Ver todas las fotos
      <motion.span
        className="ml-2"
        initial={{ x: 0 }}
        whileHover={{ x: 5 }}
      >
        →
      </motion.span>
    </span>
  </motion.button>
</div>

{/* Modal de Galería */}
<AnimatePresence>
  {showGallery && (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
      className="fixed inset-0 z-50 flex items-center justify-center"
    >
      {/* Fondo oscuro */}
      <div className="absolute inset-0 bg-black/95" onClick={() => setShowGallery(false)} />

      {/* Contenido */}
      <div className="relative z-10 w-full">
        {/* Botón Cerrar */}
        <motion.button
          onClick={() => setShowGallery(false)}
          className="absolute top-4 right-4 text-white hover:text-luxury-gold-light transition-colors p-2 z-20"
          whileHover={{ scale: 1.1 }}
          whileTap={{ scale: 0.9 }}
        >
          <X className="w-8 h-8" />
        </motion.button>

        {/* Navegación */}
        <motion.button
          onClick={() => setCurrentImage((prev) => (prev - 1 + images.length) % images.length)}
          className="absolute left-4 top-1/2 transform -translate-y-1/2 
            text-white hover:text-luxury-gold-light transition-colors p-2 z-20"
          whileHover={{ scale: 1.2, x: -5 }}
          whileTap={{ scale: 0.9 }}
        >
          <ChevronLeft className="w-8 h-8" />
        </motion.button>

        <motion.button
          onClick={() => setCurrentImage((prev) => (prev + 1) % images.length)}
          className="absolute right-4 top-1/2 transform -translate-y-1/2 
            text-white hover:text-luxury-gold-light transition-colors p-2 z-20"
          whileHover={{ scale: 1.2, x: 5 }}
          whileTap={{ scale: 0.9 }}
        >
          <ChevronRight className="w-8 h-8" />
        </motion.button>

        {/* Imagen Principal */}
        <motion.div
          key={currentImage}
          initial={{ opacity: 0, scale: 0.9 }}
          animate={{ opacity: 1, scale: 1 }}
          exit={{ opacity: 0, scale: 0.9 }}
          transition={{ type: "spring", stiffness: 300, damping: 30 }}
          className="relative max-w-5xl mx-auto px-4"
        >
          <img
            src={images[currentImage].src}
            alt={images[currentImage].alt}
            className="max-h-[80vh] w-auto mx-auto rounded-lg shadow-2xl"
          />
          
          {/* Información */}
          <div className="absolute -bottom-16 left-1/2 transform -translate-x-1/2 text-center">
            <div className="bg-black/50 text-white px-6 py-3 rounded-full backdrop-blur-sm">
              <h3 className="text-xl font-light mb-2">{images[currentImage].title}</h3>
              <p className="text-sm text-luxury-cream-dark">
                {currentImage + 1} / {images.length}
              </p>
            </div>
          </div>
        </motion.div>

        {/* Miniaturas */}
        <div className="absolute bottom-8 left-1/2 transform -translate-x-1/2 
          flex space-x-3 overflow-x-auto max-w-3xl px-4">
          {images.map((img, index) => (
            <motion.button
              key={index}
              onClick={() => setCurrentImage(index)}
              className={`
                relative w-20 h-20 rounded-lg overflow-hidden flex-shrink-0
                transition-all duration-300
                ${currentImage === index ? 'ring-2 ring-luxury-gold-light scale-110' : 'opacity-50 hover:opacity-100'}
              `}
              whileHover={{ scale: 1.1 }}
              whileTap={{ scale: 0.95 }}
            >
              <img
                src={img.src}
                alt={img.alt}
                className="w-full h-full object-cover"
              />
            </motion.button>
          ))}
        </div>
      </div>
    </motion.div>
  )}
</AnimatePresence>

        {/* Información y Reserva */}
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-12 mt-16">
          {/* Información Principal */}
          <div className="lg:col-span-2 space-y-8">
            <div>
              <h2 className="text-3xl font-light text-luxury-brown dark:text-luxury-cream-light">
                Suite Ejecutiva
              </h2>
              <p className="mt-4 text-luxury-brown-light dark:text-luxury-cream-dark leading-relaxed">
                Experimenta el lujo y la comodidad en nuestra Suite Ejecutiva. Un espacio 
                cuidadosamente diseñado que combina elegancia moderna con comodidades premium, 
                ofreciendo una experiencia de hospedaje excepcional para el viajero exigente.
              </p>
            </div>

            {/* Amenidades */}
            <div>
              <h3 className="text-xl font-light text-luxury-brown dark:text-luxury-cream-light mb-4">
                Amenidades
              </h3>
              <div className="grid grid-cols-2 gap-4">
                {amenities.map((amenity, index) => (
                  <div 
                    key={index}
                    className="flex items-center space-x-2 text-luxury-brown-light dark:text-luxury-cream-dark"
                  >
                    <Check className="w-5 h-5 text-luxury-gold" />
                    <span>{amenity}</span>
                  </div>
                ))}
              </div>
            </div>

            {/* Políticas */}
            <div>
              <h3 className="text-xl font-light text-luxury-brown dark:text-luxury-cream-light mb-4">
                Información Importante
              </h3>
              <div className="space-y-2 text-luxury-brown-light dark:text-luxury-cream-dark">
                <p>Check-in: 3:00 PM | Check-out: 12:00 PM</p>
                <p>Política de cancelación: Gratuita hasta 24 horas antes</p>
                <p>No se permiten mascotas</p>
              </div>
            </div>
          </div>

          {/* Módulo de Reserva */}
          <div className="lg:col-span-1">
            <div className="sticky top-8 bg-white dark:bg-luxury-brown-light rounded-xl shadow-xl p-6">
              <div className="flex justify-between items-center mb-6">
                <div>
                  <span className="block text-2xl font-light text-luxury-brown dark:text-luxury-cream-light">
                    $299 USD
                  </span>
                  <span className="text-luxury-brown-light dark:text-luxury-cream-dark">
                    por noche
                  </span>
                </div>
                <div className="flex items-center space-x-1">
                  <span className="text-luxury-gold">★★★★★</span>
                  <span className="text-luxury-brown-light dark:text-luxury-cream-dark">
                    (48 reseñas)
                  </span>
                </div>
              </div>

              <div className="space-y-4">
                <div>
                  <label className="block text-sm font-medium text-luxury-brown dark:text-luxury-cream-light mb-1">
                    Fecha de llegada
                  </label>
                  <input
                    type="date"
                    className="w-full p-2 rounded-lg
                      border border-luxury-cream-dark dark:border-luxury-brown
                      bg-luxury-cream dark:bg-luxury-brown
                      text-luxury-brown dark:text-luxury-cream
                      focus:ring-2 focus:ring-luxury-gold-light focus:border-transparent"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-luxury-brown dark:text-luxury-cream-light mb-1">
                    Fecha de salida
                  </label>
                  <input
                    type="date"
                    className="w-full p-2 rounded-lg
                      border border-luxury-cream-dark dark:border-luxury-brown
                      bg-luxury-cream dark:bg-luxury-brown
                      text-luxury-brown dark:text-luxury-cream
                      focus:ring-2 focus:ring-luxury-gold-light focus:border-transparent"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-luxury-brown dark:text-luxury-cream-light mb-1">
                    Huéspedes
                  </label>
                  <select
                    className="w-full p-2 rounded-lg
                      border border-luxury-cream-dark dark:border-luxury-brown
                      bg-luxury-cream dark:bg-luxury-brown
                      text-luxury-brown dark:text-luxury-cream
                      focus:ring-2 focus:ring-luxury-gold-light focus:border-transparent"
                  >
                    <option>1 huésped</option>
                    <option>2 huéspedes</option>
                    <option>3 huéspedes</option>
                    <option>4 huéspedes</option>
                  </select>
                </div>
                <button className="w-full py-3 px-4 rounded-lg
                  bg-luxury-gold hover:bg-luxury-gold-dark
                  text-white text-lg font-light
                  transition-colors">
                  Reservar ahora
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Galería Modal */}
      <AnimatePresence>
        {showGallery && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 z-50 bg-black bg-opacity-90 flex items-center justify-center"
          >
            <button
              onClick={() => setShowGallery(false)}
              className="absolute top-4 right-4 text-white hover:text-luxury-gold-light transition-colors"
            >
              <X className="w-8 h-8" />
            </button>

            <button
              onClick={() => setCurrentImage((prev) => (prev - 1 + images.length) % images.length)}
              className="absolute left-4 top-1/2 transform -translate-y-1/2 
                text-white hover:text-luxury-gold-light transition-colors"
            >
              <ChevronLeft className="w-8 h-8" />
            </button>

            <button
              onClick={() => setCurrentImage((prev) => (prev + 1) % images.length)}
              className="absolute right-4 top-1/2 transform -translate-y-1/2 
                text-white hover:text-luxury-gold-light transition-colors"
            >
              <ChevronRight className="w-8 h-8" />
            </button>

            <motion.div
              key={currentImage}
              initial={{ opacity: 0, scale: 0.9 }}
              animate={{ opacity: 1, scale: 1 }}
              exit={{ opacity: 0, scale: 0.9 }}
              transition={{ type: "spring", stiffness: 300, damping: 30 }}
              className="relative max-w-5xl mx-auto px-4"
            >
              <img
                src={images[currentImage].src}
                alt={images[currentImage].alt}
                className="max-h-[80vh] w-auto mx-auto rounded-lg shadow-2xl"
              />
              <div className="absolute bottom-4 left-1/2 transform -translate-x-1/2 
                bg-black/50 text-white px-4 py-2 rounded-full backdrop-blur-sm">
                {currentImage + 1} / {images.length}
              </div>
              <div className="absolute bottom-16 left-1/2 transform -translate-x-1/2 text-white text-lg">
                {images[currentImage].title}
              </div>
            </motion.div>

            {/* Thumbnails */}
            <div className="absolute bottom-8 left-1/2 transform -translate-x-1/2 
              flex space-x-2 overflow-x-auto max-w-3xl px-4">
              {images.map((img, index) => (
                <button
                  key={index}
                  onClick={() => setCurrentImage(index)}
                  className={`
                    w-16 h-16 rounded-lg overflow-hidden flex-shrink-0
                    border-2 transition-all duration-300
                    ${currentImage === index 
                      ? 'border-luxury-gold-light scale-110' 
                      : 'border-transparent opacity-50 hover:opacity-100'}
                  `}
                >
                  <img
                    src={img.src}
                    alt={img.alt}
                    className="w-full h-full object-cover"
                  />
                </button>
              ))}
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </div>
  );
};

export default SocorroProject;

================================================================================
File: styles\index.css
================================================================================

@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    scroll-behavior: smooth;
  }
  
  body {
    @apply font-sans antialiased;
  }
}

/* src/styles/index.css */
@layer utilities {
    .snap-y {
      scroll-snap-type: y mandatory;
    }
    
    .snap-start {
      scroll-snap-align: start;
    }
    
    .snap-center {
      scroll-snap-align: center;
    }
  }
  
  /* Ocultar scrollbar pero mantener funcionalidad */
  .scroll-hide {
    scrollbar-width: none;
    -ms-overflow-style: none;
  }
  
  .scroll-hide::-webkit-scrollbar {
    display: none;
  }
